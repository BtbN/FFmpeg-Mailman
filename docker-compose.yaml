services:
  builder:
    image: mailman:latest
    pull_policy: build
    build: mailman
    command: "true"

  core:
    image: mailman:latest
    pull_policy: never
    command: core
    restart: unless-stopped
    volumes:
      - ./core:/opt/mailman/
      - ./public-inbox:/opt/public-inbox/
    stop_grace_period: 30s
    depends_on:
      builder:
        condition: service_completed_successfully
      db:
        condition: service_healthy
        restart: true
    environment:
      - DATABASE_NAME=${DATABASE_NAME_CORE}
      - DATABASE_USER=${DATABASE_USER_CORE}
      - DATABASE_PASS=${DATABASE_PASS_CORE}
      - HYPERKITTY_API_KEY=${HYPERKITTY_API_KEY}
      - REST_ADMIN_USER=${REST_ADMIN_USER}
      - REST_ADMIN_PASS=${REST_ADMIN_PASS}
      - PUBLIC_INBOX_HOST=${PUBLIC_INBOX_HOST}
      - SITE_OWNER=${SITE_OWNER}
    extra_hosts:
      - host.docker.internal:host-gateway
      # This needs to be defined in /etc/hosts to point to 127.0.0.1, so postfix can reach the LMTP service.
      # Also remember to set "lmtp_host_lookup = native" so postfix actually looks at the hosts file.
      - mailman.docker.local:0.0.0.0
    ports: # The port needs to match inside and outside, cause mailman generates map files for the MTA with it
      - 127.0.0.1:8024:8024 # LMTP
    networks:
      - backend
      - frontend

  web:
    image: mailman:latest
    pull_policy: never
    command: web
    restart: unless-stopped
    depends_on:
      builder:
        condition: service_completed_successfully
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./web:/opt/mailman-web/
    environment:
      - DATABASE_NAME=${DATABASE_NAME_WEB}
      - DATABASE_USER=${DATABASE_USER_WEB}
      - DATABASE_PASS=${DATABASE_PASS_WEB}
      - HYPERKITTY_API_KEY=${HYPERKITTY_API_KEY}
      - REST_ADMIN_USER=${REST_ADMIN_USER}
      - REST_ADMIN_PASS=${REST_ADMIN_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - SERVE_FROM_DOMAINS=${SERVE_FROM_DOMAINS}
      - SERVER_EMAIL=${SERVER_EMAIL}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 127.0.0.1:9080:8080 # uwsgi
    networks:
      - backend
      - frontend

  public-inbox:
    image: mailman:latest
    pull_policy: never
    command: pihttpd
    restart: unless-stopped
    depends_on:
      builder:
        condition: service_completed_successfully
    environment:
      - PUBLIC_INBOX_WEBMOUNT=${PUBLIC_INBOX_WEBMOUNT}
    volumes:
      - ./public-inbox:/opt/public-inbox/
    ports:
      - 127.0.0.1:9081:8080
    networks:
      - frontend

  logrotate:
    image: mailman:latest
    pull_policy: never
    command: logrotate
    restart: unless-stopped
    depends_on:
      builder:
        condition: service_completed_successfully
    volumes:
      - ./web:/opt/mailman-web/
      - ./core:/opt/mailman/

  db:
    image: mariadb:11
    restart: unless-stopped
    environment:
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_RANDOM_ROOT_PASSWORD=yes
      - MARIADB_DATABASE=${DATABASE_NAME_CORE}
      - MARIADB_USER=${DATABASE_USER_CORE}
      - MARIADB_PASSWORD=${DATABASE_PASS_CORE}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-connect='SET NAMES UTF8;'
    ulimits:
      memlock: "262144"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend
    configs:
      - source: init_db
        target: /docker-entrypoint-initdb.d/second.sh
        mode: 0644
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  db-data:
  public-inbox-data:

networks:
  frontend:
  backend:
    external: false

configs:
  init_db:
    content: |
      mysql_note "Creating web database and user"
      docker_process_sql <<'EOF'
          CREATE DATABASE `${DATABASE_NAME_WEB}`;
          CREATE USER '${DATABASE_USER_WEB}'@'%' IDENTIFIED BY '${DATABASE_PASS_WEB}';
          GRANT ALL PRIVILEGES ON `${DATABASE_NAME_WEB}`.* TO '${DATABASE_USER_WEB}'@'%';
      EOF
